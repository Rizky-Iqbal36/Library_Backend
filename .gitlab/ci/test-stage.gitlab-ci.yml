test:integration:
  stage: test
  needs:
    - job: prepare
      artifacts: true
  artifacts:
    paths:
      - node_modules
      - dist
      - package.json
      - package-lock.json
      - coverage
      - junit.xml
    reports:
      junit:
        - junit.xml
        - coverage/*.xml
    expire_in: 7d
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
  variables:
    APP_ENV: 'PIPELINE'
    CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
    CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
    CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
    CLOUDINARY_ASSETS: ${CLOUDINARY_ASSETS}
    JWT_SECRET: ${JWT_SECRET}
    ENCRYPT_JWT_SECRET: ${ENCRYPT_JWT_SECRET}
    JWT_EXPIRATION: ${JWT_EXPIRATION}
  script:
    - cp .env.example .env
    - npm install
    - npm run dependency:local
    - sleep 5
    - mongo
    # - docker-compose -f docker-compose.yml run app npm run test
